swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /flight:
    x-swagger-router-controller: flight
    get:
      description: get the flight info
      #define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetFlightResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurant:
    x-swagger-router-controller: restaurant
    get:
      description: get the restaurant info
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRestaurantResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hotel:
    x-swagger-router-controller: hotel
    get:
      description: get the hotel info
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetHotelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users:
    x-swagger-router-controller: users
    get:
      description: get users info
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add user info
      produces:
        - application/json
      parameters:
        - name: personName
          description: adding a user
          in: body
          required: true
          schema:
            $ref: "#/definitions/AddUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    put:
      operationId: update a person
      # define the parameters
      parameters:
        - name: id
          description: Movie id
          type: string
          in: path
          required: true
        - name: title
          description: Movie properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Movie"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{id}:
    x-swagger-router-controller: users
    get:
      description: return specific users
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the person to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/specificUser"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add specific user
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          description: ID of the user that need to be updated
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/updateUser"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetFlightResponse:
    required:
      - id
      - airline
      - cost
      - destination_city
      - departure_city
      - arrival_date
      - departure_date

    properties:
      id:
        type: integer
      airline:
        type: string
      cost:
        type: integer
      destination_city:
        type: string
      departure_city:
        type: string
      arrival_date:
        type: string
      departure_date:
        type: string

  GetRestaurantResponse:
    required:
      - id
      - name
      - city_name
      - street_name
      - cost
    properties:
      id:
        type: integer
      name:
        type: string
      city_name:
        type: string
      street_name:
        type: string
      cost:
        type: integer

  GetHotelResponse:
    required:
      - id
      - name
      - city_name
      - street_name
      - cost
    properties:
      id:
        type: integer
      name:
        type: string
      city_name:
        type: string
      street_name:
        type: string
      cost:
        type: integer

  GetUsersResponse:
    required:
      - id
      - first_name
      - last_name
      - username
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string

  AddUser:
    type: object
    required:
      - id
      - password
      - first_name
      - last_name
      - username
    properties:
      id: 
        type: integer
      password:
        type: string
      first_name: 
        type: string
      last_name:
        type: string
      username:
        type: string 
        
  specificUser:
    type: object
    required:
      - id
      - first_name
      - last_name
      - username
    properties:
      id:
        type: integer
        format: int64
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
  PostUsersResponse:
    type: object
    required:
      - id
      - first_name
      - last_name
      - username
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string

  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
